[{"F:\\projects\\react\\boxes\\boxes\\src\\index.js":"1","F:\\projects\\react\\boxes\\boxes\\src\\App.js":"2","F:\\projects\\react\\boxes\\boxes\\src\\reportWebVitals.js":"3","F:\\projects\\react\\boxes\\boxes\\src\\RandomBoxColor.js":"4"},{"size":181,"mtime":1609325945674,"results":"5","hashOfConfig":"6"},{"size":804,"mtime":1609326847039,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2539,"mtime":1609326827969,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"120eo0l",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"F:\\projects\\react\\boxes\\boxes\\src\\index.js",["20"],"F:\\projects\\react\\boxes\\boxes\\src\\App.js",[],"F:\\projects\\react\\boxes\\boxes\\src\\reportWebVitals.js",[],"F:\\projects\\react\\boxes\\boxes\\src\\RandomBoxColor.js",["21","22"],"import React from 'react';\r\n\r\n// This component renders a box with a random background color\r\n// It will change the color each x ms that will be passed by prop\r\n// Prop\r\n// colorChangeInterval - number - positive integer for the ms of the interval\r\n// State\r\n// color - string - the css color of the bg (e.g. \"#FF0000\")\r\nclass RandomBoxColor extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.counter=0;\r\n        this.radious=\"0\";\r\n        this.state = {\r\n            color: this.getRandomColor()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const newColor = this.getRandomColor();\r\n            console.log(\"updating new color to: \" + newColor);\r\n            this.setState({color: newColor});\r\n        }, this.props.colorChangeInterval);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        ++this.counter;\r\n        console.log (this.counter);\r\n        if (this.counter==5)\r\n        {\r\n            this.radious=\"50%\";\r\n        }\r\n        if (this.counter>=10) \r\n        {\r\n            console.log (\"Yeah\");\r\n            clearInterval(this.myInterval);\r\n        }\r\n\r\n        // Check that the colorChangeInterval was changed\r\n        if (this.props.colorChangeInterval != prevProps.colorChangeInterval) {\r\n            // 1) Stop the current interval\r\n            clearInterval(this.myInterval);\r\n           \r\n            // 2) create a new interval with the new time\r\n            this.myInterval = setInterval(() => {\r\n                const newColor = this.getRandomColor();\r\n                console.log(\"updating new color to: \" + newColor);\r\n                this.setState({color: newColor});\r\n            }, this.props.colorChangeInterval);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval);\r\n    }\r\n\r\n    getRandomColor() {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = \"#\";\r\n        for (let i = 0; i < 6; i++) {\r\n            const index = Math.floor(Math.random() * 16);\r\n            color += letters[index];\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    render() {\r\n        const {color} = this.state;\r\n\r\n        // converting data to presentation\r\n        // convert the color state to a style object \r\n        const myStyle = {backgroundColor: color ,borderRadius:this.radious}\r\n        return (\r\n            <>\r\n                <div style={myStyle} className=\"box\"></div>\r\n            </>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default RandomBoxColor;\r\n",["23","24"],{"ruleId":"25","severity":1,"message":"26","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"30","line":32,"column":25,"nodeType":"31","messageId":"32","endLine":32,"endColumn":27},{"ruleId":"29","severity":1,"message":"33","line":43,"column":44,"nodeType":"31","messageId":"32","endLine":43,"endColumn":46},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-global-assign","no-unsafe-negation"]